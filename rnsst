#!/usr/bin/env node

const program = require('commander');
const path = require('path');
const {execSync} = require('child_process');

function execute(command) {
  return execSync(command, {stdio: 'inherit'});
}

program
  .version('0.0.1')
  .option('-c, --config [path]', 'custom path to config. Defaults to ./rnss-config.js', path.resolve(process.cwd(), './rnss-config.js'));

program
  .command('create-reference')
  .description('Create reference screenshots for your stories')
  .action(() => {
    const {screenshotPath} = require(program.config);
    execute(`STORYBOOK_UPDATE_REFERENCE=true STORYBOOK_SCREENSHOT_PATH=${screenshotPath} detox test`);
  });

program
  .command('test')
  .description('Compare your stories to reference screenshots')
  .action(() => {
    const {screenshotPath} = require(program.config);

    let error;
    try {
      execute(`STORYBOOK_SCREENSHOT_PATH=${screenshotPath} detox test`);
    } catch (e) {
      error = e;
    }
    execute(`STORYBOOK_SCREENSHOT_PATH=${screenshotPath} sh ${path.resolve(__dirname, './scripts/create-html.sh')}`);

    if (error) {
      throw error;
    }
  });

program
  .command('approve')
  .description('Set your current screenshots as reference screenshots')
  .action(() => {
    const {screenshotPath} = require(program.config);
    execute(`STORYBOOK_SCREENSHOT_PATH=${screenshotPath} node ${path.resolve(__dirname, './scripts/update-reference.js')}`);
  });

program
  .command('results', 'Open results in your browser')
  .action(() => {
    const {screenshotPath} = require(program.config);
    const report = path.resolve(screenshotPath, './index.html');
    execute(`open ${report}`);
  });

program.parse(process.argv);
